#include<stdio.h>
#include<string.h>
#include<stdlib.h>

typedef struct {
    int element;
    Link *next;
}Link;

typedef struct{
    Link *top;
    int size;
}Stack;
typedef struct{
    Link front;
    Link rear;
    int size;
}Queue;

Link create_link(int it,Link *nextval){
    Link n;
    n.element=&it; 
    n.next = nextval;
    return n;
}

Stack create_stack(){
    Stack s;
    s.top=NULL;
    s.size=0;
    return s;
}

void push(Stack s,int it){
    s.top=create_link(it, s.top);//?
    s.size++;
}

int pop(Stack s){
    if (s.top == NULL) exit(1);
    int it=s.top.element; //?
    s.top=s.top.next;  //?
    s.size--;
    return it;
}
Queue create_queue(){
    Queue q;
    q.front = q.rear ; 
    q.rear = create_link(NULL,NULL);
    q.size = 0;
    return q;
}
void enqueue(Queue q,int  it){
    q.rear.next = create_link(it, NULL);
    q.rear = q.rear.next;
    q.size++;
}
int dequeue(Queue q){
    if(q.size = 0) exit(1);
    int it = q.front.next.element;
    q.front.next = q.front.next.next;
    if(q.front.next == NULL) q.rear = q.front;
    q.size--;
    return it;
}

int main(){
    char x1;
    char x2;
    int v1;
    int v2;
    char it;
    int fim=0;
    char str[10*10*10*10*10*10*2];
    Stack s=create_stack();
    Queue q=create_queue();
    //enqueue(q,it);
    //dequeue(q);
    char operador;
    int soma;
    while(fim==0){
        scanf(" %[ END] END",str);
        int strl=strlen(str);
        
        for(int i=0;i<strl;i++){
            if(str[i]!=' '&& str[i]!='+'&&str[i]!='-'&& str[i]!='*'){
                x1=str[i];
                push(s,atoi(x1));
                str[i]=' ';
                x2=str[i+2];
                push(s,atoi(x2));
                int j=i;
                while(str[j]!='+'&&str[j]!='-'&& str[j]!='*'){
                    if (str[j]='+'){
                        operador='+';
                        str[j]=' ';
                    }
                    else if(str[j]='-'){
                        operador='-';
                        str[j]=' ';
                    }
                    else if(str[j]='*'){
                        operador='*';
                        str[j]=' ';
                    }
                    j++;
                }

            v2=pop(s);v1=pop(s);
            if(operador=="*")
                push(s,v1*v2);
            else if(operador=="+"){
                push(s,v1+v2);
            }
            else push(s,(v1-v2));
            }
        }
        fim=1;
    } 

    //push(s,v1);
    //v2=pop(s);
    //v1=pop(s);

}
